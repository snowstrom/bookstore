{
	"id":"c0007",
	"name":"C语言入门经典第5版霍尔顿著中文版c语言程序设计教材",
	"src":"assets/index/c/c0007.jpg",
	"price":36,
	"post":0.00,
	"sail":334,
	"comment":182,
	"stock":30,
	"relate":[
					{
						"src":"assets/index/c/c0002.jpg",
						"name":"C 程序设计语言（第2版）",
						"price":21,
						"id":"c0002"
					},{
						"src":"assets/index/c/c0003.jpg",
						"name":"C陷阱与缺陷",
						"price":24,
						"id":"c0003"
					},{
						"src":"assets/index/c/c0004.jpg",
						"name":"数据结构与算法分析（C语言描述）",
						"price":23,
						"id":"c0004"
					},{
						"src":"assets/index/c/c0005.jpg",
						"name":"C和指针",
						"price":44,
						"id":"c0005"
					},{
						"src":"assets/index/c/c0006.jpg",
						"name":"数据结构（C语言版）",
						"price":35,
						"id":"c0006"
					},{
						"src":"assets/index/c/c0001.jpg",
						"name":"C Primer Plus(第五版)",
						"price":40.1,
						"id":"c0001"
					},{
						"src":"assets/index/c/c0008.jpg",
						"name":"C语言从入门到精通",
						"price":33,
						"id":"c0008"
					}
			],
	"basic":{
				"title":"C语言入门经典 (第5版)",
				"packag":"否",
				"name":"C语言入门经典 (第5版)",
				"price":"69.80元",
				"press":"清华大学出版社",
				"press_time":"2013年11月",
				"author":"Ivor Horton(著)、杨浩(译)",
				"block":"美国/中国大陆",
				"format":"16"
				},
	"book_info":"C语言是每一位程序员都应该掌握的基础语言。C语言是微软.NET编程中使用的C#语言的基础；C语言是iPhone、iPad和其他苹果设备编程中使用的Objective-C语言的基础；C语言是在很多环境中(包括GNU项目)被广泛使用的C++语言的基础。C语言也是Linux操作系统及其很多功能的基础。学习C语言可以给编程职业生涯提供牢固的基础，也有助于更好地理解更为现代的语言(如Java)。<br/><br/>《C语言入门经典(第5版)》主要介绍最基础的计算机语言之一C语言。本书从最基础的内容开始，步步深入讲解作为一位称职的C语言程序员应该具备的知识和技能。<br/><br/>本书完整地介绍了一个C应用程序的开发过程，这样你在阅读过程中可以结合实际的应用场景提高编程技能。书中的样例提供了实验的基础，可以通过修改其中的部分代码来对比前后程序运行的结果。后面的练习题用来测试对新知识、新技能的掌握情况，如果需要练习题答案，可以网上下载。<br/><br/>阅读完本书，你应该有能力和信心开发自己的C应用程序，并且具备在大型项目中应用C语言思想的技能。第5版详细介绍了C语言的最新国际标准，并且修订涵盖了语言编译器新支持的C11功能。<br/>",
	"catalog":"第1章  C语言编程 <br/>1.1  C语言 <br/>1.2  标准库 <br/>1.3  学习C <br/>1.4  创建C程序 <br/>1.4.1  编辑 <br/>1.4.2  编译 <br/>1.4.3  链接 <br/>1.4.4  执行 <br/>1.5  创建第一个程序 <br/>1.6  编辑第一个程序 <br/>1.7  处理错误 <br/>1.8  剖析一个简单的程序 <br/>1.8.1  注释 <br/>1.8.2  预处理指令 <br/>1.8.3  定义main()函数 <br/>1.8.4  关键字 <br/>1.8.5  函数体 <br/>1.8.6  输出信息 <br/>1.8.7  参数 <br/>1.8.8  控制符 <br/>1.8.9  三字母序列 <br/>1.9  预处理器 <br/>1.10  用C语言开发程序 <br/>1.10.1  了解问题 <br/>1.10.2  详细设计 <br/>1.10.3  实施 <br/>1.10.4  测试 <br/>1.11  函数及模块化编程 <br/>1.12  常见错误 <br/>1.13  要点 <br/>1.14  小结 <br/>1.15  习题 <br/>第2章  编程初步 <br/>2.1  计算机的内存 <br/>2.2  什么是变量 <br/>2.3  存储整数的变量 <br/>2.3.1  变量的使用 <br/>2.3.2  变量的初始化 <br/>2.4  变量与内存 <br/>2.4.1  带符号的整数类型 <br/>2.4.2  无符号的整数类型 <br/>2.4.3  指定整数常量 <br/>2.5  使用浮点数 <br/>2.6  浮点数变量 <br/>2.6.1  使用浮点数完成除法运算 <br/>2.6.2  控制输出中的小数位数 <br/>2.6.3  控制输出的字段宽度 <br/>2.7  较复杂的表达式 <br/>2.8  定义命名常量 <br/>2.8.1  极限值 <br/>2.8.2  sizeof运算符 <br/>2.9  选择正确的类型 <br/>2.10  强制类型转换 <br/>2.10.1  自动转换类型 <br/>2.10.2  隐式类型转换的规则 <br/>2.10.3  赋值语句中的隐式类型转换 <br/>2.11  再谈数值数据类型 <br/>2.11.1  字符类型 <br/>2.11.2  字符的输入输出 <br/>2.11.3  枚举 <br/>2.11.4  存储布尔值的变量 <br/>2.12  赋值操作的op=形式 <br/>2.13  数学函数 <br/>2.14  设计一个程序 <br/>2.14.1  问题 <br/>2.14.2  分析 <br/>2.14.3  解决方案 <br/>2.15  小结 <br/>2.16  练习 <br/>第3章  条件判断 <br/>3.1  判断过程 <br/>3.1.1  算术比较 <br/>3.1.2  基本的if语句 <br/>3.1.3  扩展if语句：if-else <br/>3.1.4  在if语句中使用代码块 <br/>3.1.5  嵌套的if语句 <br/>3.1.6  测试字符 <br/>3.1.7  逻辑运算符 <br/>3.1.8  条件运算符 <br/>3.1.9  运算符的优先级 <br/>3.2  多项选择问题 <br/>3.2.1  给多项选择使用else-if语句 <br/>3.2.2  switch语句 <br/>3.2.3  goto语句 <br/>3.3  按位运算符 <br/>3.3.1  按位运算符的op=用法 <br/>3.3.2  使用按位运算符 <br/>3.4  设计程序 <br/>3.4.1  问题 <br/>3.4.2  分析 <br/>3.4.3  解决方案 <br/>3.5  小结 <br/>3.6  练习 <br/>第4章  循环 <br/>4.1  循环 <br/>4.2  递增和递减运算符 <br/>4.3  for循环 <br/>4.4  for循环的一般语法 <br/>4.5  再谈递增和递减运算符 <br/>4.5.1  递增运算符 <br/>4.5.2  递增运算符的前置和后置形式 <br/>4.5.3  递减运算符 <br/>4.6  再论for循环 <br/>4.6.1  修改for循环变量 <br/>4.6.2  没有参数的for循环 <br/>4.6.3  循环内的break语句 <br/>4.6.4  使用for循环限制输入 <br/>4.6.5  生成伪随机整数 <br/>4.6.6  再谈循环控制选项 <br/>4.6.7  浮点类型的循环控制变量 <br/>4.7  while循环 <br/>4.8  嵌套循环 <br/>4.9  嵌套循环和goto语句 <br/>4.10  do-while循环 <br/>4.11  continue语句 <br/>4.12  设计程序 <br/>4.12.1  问题 <br/>4.12.2  分析 <br/>4.12.3  解决方案 <br/>4.13  小结 <br/>4.14  习题 <br/>第5章  数组 <br/>5.1  数组简介 <br/>5.1.1  不用数组的程序 <br/>5.1.2  什么是数组 <br/>5.1.3  使用数组 <br/>5.2  寻址运算符 <br/>5.3  数组和地址 <br/>5.4  数组的初始化 <br/>5.5  确定数组的大小 <br/>5.6  多维数组 <br/>5.7  多维数组的初始化 <br/>5.8  变长数组 <br/>5.9  设计一个程序 <br/>5.9.1  问题 <br/>5.9.2  分析 <br/>5.9.3  解决方案 <br/>5.10  小结 <br/>5.11  习题 <br/>第6章  字符串和文本的应用 <br/>6.1  什么是字符串 <br/>6.2  存储字符串的变量 <br/>6.3  字符串操作 <br/>6.3.1  检查对C11的支持 <br/>6.3.2  确定字符串的长度 <br/>6.3.3  复制字符串 <br/>6.3.4  连接字符串 <br/>6.3.5  比较字符串 <br/>6.3.6  搜索字符串 <br/>6.3.7  单元化字符串 <br/>6.3.8  将换行符读入字符串 <br/>6.4  分析和转换字符串 <br/>6.4.1  转换字符的大小写形式 <br/>6.4.2  将字符串转换成数值 <br/>6.5  设计一个程序 <br/>6.5.1  问题 <br/>6.5.2  分析 <br/>6.5.3  解决方案 <br/>6.6  小结 <br/>6.7  习题 <br/>第7章  指针 <br/>7.1  指针初探 <br/>7.1.1  声明指针 <br/>7.1.2  通过指针访问值 <br/>7.1.3  使用指针 <br/>7.1.4  指向常量的指针 <br/>7.1.5  常量指针 <br/>7.1.6  指针的命名 <br/>7.2  数组和指针 <br/>7.3  多维数组 <br/>7.3.1  多维数组和指针 <br/>7.3.2  访问数组元素 <br/>7.4  内存的使用 <br/>7.4.1  动态内存分配：malloc()函数 <br/>7.4.2  释放动态分配的内存 <br/>7.4.3  用calloc()函数分配内存 <br/>7.4.4  扩展动态分配的内存 <br/>7.5  使用指针处理字符串 <br/>7.5.1  使用指针数组 <br/>7.5.2  指针和数组记号 <br/>7.6  设计程序 <br/>7.6.1  问题 <br/>7.6.2  分析 <br/>7.6.3  解决方案 <br/>7.7  小结 <br/>7.8  习题 <br/>第8章  编程的结构 <br/>8.1  程序的结构 <br/>8.1.1  变量的作用域和生存期 <br/>8.1.2  变量的作用域和函数 <br/>8.2  函数 <br/>8.2.1  定义函数 <br/>8.2.2  return语句 <br/>8.3  按值传递机制 <br/>8.4  函数原型 <br/>8.5  指针用作参数和返回值 <br/>8.5.1  常量参数 <br/>8.5.2  返回指针的风险 <br/>8.6  小结 <br/>8.7  习题 <br/>第9章  函数再探 <br/>9.1  函数指针 <br/>9.1.1  声明函数指针 <br/>9.1.2  通过函数指针调用函数 <br/>9.1.3  函数指针的数组 <br/>9.1.4  作为变元的函数指针 <br/>9.2  函数中的变量 <br/>9.2.1  静态变量：函数内部的追踪 <br/>9.2.2  在函数之间共享变量 <br/>9.3  调用自己的函数：递归 <br/>9.4  变元个数可变的函数 <br/>9.4.1  复制va_list <br/>9.4.2  长度可变的变元列表的基本规则 <br/>9.5  main()函数 <br/>9.6  结束程序 <br/>9.6.1  abort()函数 <br/>9.6.2  exit()和atexit()函数 <br/>9.6.3  _Exit()函数 <br/>9.6.4  quick_exit()和at_quick_exit()函数 <br/>9.7  提高性能 <br/>9.7.1  内联声明函数 <br/>9.7.2  使用restrict关键字 <br/>9.7.3  _Noreturn函数限定符 <br/>9.8  设计程序 <br/>9.8.1  问题 <br/>9.8.2  分析 <br/>9.8.3  解决方案 <br/>9.9  小结 <br/>9.10  习题 <br/>第10章  基本输入和输出操作 <br/>10.1  输入和输出流 <br/>10.2  标准流 <br/>10.3  键盘输入 <br/>10.3.1  格式化键盘输入 <br/>10.3.2  输入格式控制字符串 <br/>10.3.3  输入格式字符串中的字符 <br/>10.3.4  输入浮点数的各种变化 <br/>10.3.5  读取十六进制和八进制值 <br/>10.3.6  用scanf_s()读取字符 <br/>10.3.7  从键盘上输入字符串 <br/>10.3.8  单个字符的键盘输入 <br/>10.4  屏幕输出 <br/>10.4.1  使用printf_s()的格式化输出 <br/>10.4.2  转义序列 <br/>10.4.3  整数输出 <br/>10.4.4  输出浮点数 <br/>10.4.5  字符输出 <br/>10.5  其他输出函数 <br/>10.5.1  屏幕的非格式化输出 <br/>10.5.2  数组的格式化输出 <br/>10.5.3  数组的格式化输入 <br/>10.6  小结 <br/>10.7  习题 <br/>第11章  结构化数据 <br/>11.1  数据结构：使用struct <br/>11.1.1  定义结构类型和结构变量 <br/>11.1.2  访问结构成员 <br/>11.1.3  未命名的结构 <br/>11.1.4  结构数组 <br/>11.1.5  表达式中的结构成员 <br/>11.1.6  结构指针 <br/>11.1.7  为结构动态分配内存 <br/>11.2  再探结构成员 <br/>11.2.1  将一个结构作为另一个结构的成员 <br/>11.2.2  声明结构中的结构 <br/>11.2.3  将结构指针用作结构成员 <br/>11.2.4  双向链表 <br/>11.2.5  结构中的位字段 <br/>11.3  结构与函数 <br/>11.3.1  结构作为函数的变元 <br/>11.3.2  结构指针作为函数变元 <br/>11.3.3  作为函数返回值的结构 <br/>11.3.4  二叉树 <br/>11.4  共享内存 <br/>11.5  设计程序 <br/>11.5.1  问题 <br/>11.5.2  分析 <br/>11.5.3  解决方案 <br/>11.6  小结 <br/>11.7  习题 <br/>第12章  处理文件 <br/>12.1  文件的概念 <br/>12.1.1  文件中的位置 <br/>12.1.2  文件流 <br/>12.2  文件访问 <br/>12.2.1  打开文件 <br/>12.2.2  缓存文件操作 <br/>12.2.3  文件重命名 <br/>12.2.4  关闭文件 <br/>12.2.5  删除文件 <br/>12.3  写入文本文件 <br/>12.4  读取文本文件 <br/>12.5  在文本文件中读写字符串 <br/>12.6  格式化文件的输入输出 <br/>12.6.1  格式化文件输出 <br/>12.6.2  格式化文件输入 <br/>12.7  错误处理 <br/>12.8  再探文本文件操作模式 <br/>12.9  freopen_s()函数 <br/>12.10  二进制文件的输入输出 <br/>12.10.1  以二进制模式打开文件 <br/>12.10.2  写入二进制文件 <br/>12.10.3  读取二进制文件 <br/>12.11  在文件中移动 <br/>12.11.1  文件定位操作 <br/>12.11.2  找出我们在文件中的位置 <br/>12.11.3  在文件中设定位置 <br/>12.12  使用临时文件 <br/>12.12.1  创建临时文件 <br/>12.12.2  创建唯一的文件名 <br/>12.13  更新二进制文件 <br/>12.13.1  修改文件的内容 <br/>12.13.2  从键盘输入创建记录 <br/>12.13.3  将记录写入文件 <br/>12.13.4  从文件中读取记录 <br/>12.13.5  写入文件 <br/>12.13.6  列出文件内容 <br/>12.13.7  更新已有的文件内容 <br/>12.14  文件打开模式小结 <br/>12.15  设计程序 <br/>12.15.1  问题 <br/>12.15.2  分析 <br/>12.15.3  解决方案 <br/>12.16  小结 <br/>12.17  习题 <br/>第13章  支持功能 <br/>13.1  预处理 <br/>13.1.1  在程序中包含头文件 <br/>13.1.2  定义自己的头文件 <br/>13.1.3  管理多个源文件 <br/>13.1.4  外部变量 <br/>13.1.5  静态函数 <br/>13.1.6  替换程序源代码 <br/>13.2  宏 <br/>13.2.1  看起来像函数的宏 <br/>13.2.2  字符串作为宏参数 <br/>13.2.3  在宏展开式中结合两个变元 <br/>13.3  多行上的预处理器指令 <br/>13.3.1  预处理器逻辑指令 <br/>13.3.2  条件编译 <br/>13.3.3  测试多个条件 <br/>13.3.4  取消定义的标识符 <br/>13.3.5  测试标识符的指定值的指令 <br/>13.3.6  多项选择 <br/>13.3.7  标准预处理宏 <br/>13.4  调试方法 <br/>13.4.1  集成的调试器 <br/>13.4.2  调试阶段的预处理器 <br/>13.4.3  断言 <br/>13.5  日期和时间函数 <br/>13.5.1  获取时间值 <br/>13.5.2  获取日期 <br/>13.5.3  确定某一天是星期几 <br/>13.6  小结 <br/>13.7  习题 <br/>第14章  高级专用主题 <br/>14.1  使用国际字符集 <br/>14.1.1  理解Unicode <br/>14.1.2  设置区域 <br/>14.1.3  宽字符类型wchar_t <br/>14.1.4  宽字符串的操作 <br/>14.1.5  宽字符的文件流操作 <br/>14.1.6  存储Unicode字符的固定大小类型 <br/>14.2  用于可移植性的专用整数类型 <br/>14.2.1  固定宽度的整型 <br/>14.2.2  最小宽度的整型 <br/>14.2.3  最大宽度的整型 <br/>14.3  复数类型 <br/>14.3.1  复数基础 <br/>14.3.2  复数类型和操作 <br/>14.4  用线程编程 <br/>14.4.1  创建线程 <br/>14.4.2  退出线程 <br/>14.4.3  把一个线程连接到另一个线程上 <br/>14.4.4  挂起线程 <br/>14.4.5  管理线程对数据的访问 <br/>14.5  小结 <br/>附录A  计算机中的数学知识 <br/>附录B  ASCII字符代码定义 <br/>附录C  C语言中的保留字 <br/>附录D  输入输出格式说明符 <br/>附录E  标准库头文件",
	"rate":"96%",
	"assess":[
				{
					"user":"aaaaa",
					"time":"2015-06-28 17:34:43",
					"content":"与我之前看到的评价不同，我收到的这书简直包装完美，印刷完美，纸质完美。而且内容丰富，讲的特别详细。绝对值这个价"
				},{
					"user":"bbbbb",
					"time":"2015-06-28 17:34:43",
					"content":"很棒的一本书！之前看了评论有点不敢买还特地去了新华书店，但是新华书店的也是没有塑封而且还破，关键还128。这本书的顺序和我现在用的两本教材都不一样，感觉这样的排版又新鲜又有乐趣，好评"
				},{
					"user":"ccccc",
					"time":"2015-06-28 17:34:43",
					"content":"很好，正版，很有分量，当然就像其他人说的，包装不会很仔细，不过书籍也没事，我买了三本就是放在一个纸箱里的，运来也还好，没有损坏 服务很好"
				},{
					"user":"ddddd",
					"time":"2015-06-28 17:34:43",
					"content":"书看起来像正版的，质量很好，包装也很好，物流给力，夜里拍的，夜里就发货了，第二天就到了，好评，下次买书就在这家买了"
				},{
					"user":"eeeee",
					"time":"2015-06-28 17:34:43",
					"content":"书很好，印刷很清晰，看着挺舒服的?好评"
				},{
					"user":"fffff",
					"time":"2015-06-28 17:34:43",
					"content":"书挺好的，包装就一层塑料纸，还好没破。物流很快，第二天就到了"
				},{
					"user":"ggggg",
					"time":"2015-06-28 17:34:43",
					"content":"好书，是正品，送货挺快的，不得不给一个五星好评。"
				},{
					"user":"hhhhh",
					"time":"2015-06-28 17:34:43",
					"content":"很好很好很好 很好很好很好 很好很好很好，是正品，就是书的外封皮有些破损，但完全不影响使用"
				},{
					"user":"iiiii",
					"time":"2015-06-28 17:34:43",
					"content":"物流很给力。转天就送到了。书没破损。内容我看不懂。但是我弟弟说挺好的。所以给的五星。"
				},{
					"user":"jjjjj",
					"time":"2015-06-28 17:34:43",
					"content":"字迹清晰，很好，纸张结实，讲的也是详细，例子还可以"
				},{
					"user":"kkkkk",
					"time":"2015-06-28 17:34:43",
					"content":"当当的物流一如既往的好！！赞！！！！！！！书也很不错，就是书的包装显得扣，不说了，学习去了！"
				},{
					"user":"lllll",
					"time":"2015-06-28 17:34:43",
					"content":"相当不错，绝对正版，很厚，肯定对学习特别有帮助，赞"
				},{
					"user":"mmmmm",
					"time":"2015-06-28 17:34:43",
					"content":"发票拖了半月才发，这效率还是别来坑人"
				},{
					"user":"nnnnn",
					"time":"2015-06-28 17:34:43",
					"content":"书没有损坏，其实也没有评论里说的那么严重，快递本来想给4星，但最后看快递员是个老大爷，心一酸，觉得谁都不容易啊，给5星"
				},{
					"user":"ooooo",
					"time":"2015-06-28 17:34:43",
					"content":"快递很快，隔天就到了，但是书右上角有折痕，而且不止一页。包装太简陋了，亲爱的店主你这是走贵书高冷风格吗，人靠衣装，书靠包装。虽说书的内容很精华，但是书这么厚不包装很容易折到。你让我这个强迫症情何以堪。"
				},{
					"user":"ppppp",
					"time":"2015-06-28 17:34:43",
					"content":"货收到了，快递很快，虽然包装不太好，书有划痕，但是里面是好的，没完美强迫症，可以看，是正版，纸张很好，想学知识的就别在意那么多不重要的细节了。好评。"
				},{
					"user":"qqqqq",
					"time":"2015-06-28 17:34:43",
					"content":"包装太寒酸了，不过还好书没有任何损伤，斥巨资买的书我要刷一波c"
				},{
					"user":"rrrrr",
					"time":"2015-06-28 17:34:43",
					"content":"为什么不用纸皮包一下，我拿到时你们的塑料袋包装都破了"
				},{
					"user":"sssss",
					"time":"2015-06-28 17:34:43",
					"content":"正版书，就是包装太一般了，封面上有印子"
				},{
					"user":"ttttt",
					"time":"2015-06-28 17:34:43",
					"content":"就包了一个袋………完全不知道爱护书籍，这个好评我是刷我的评价的"
				},{
					"user":"uuuuu",
					"time":"2015-06-28 17:34:43",
					"content":"包装真心破，像我这种经常在书上画娃娃的人都看不下去了，就一个快递袋，里面装了一本书，关键是快递袋还破了，其实你把包装搞好一点，加价5块钱我都可以接收。。。"
				},{
					"user":"vvvvv",
					"time":"2015-06-28 17:34:43",
					"content":"相当快啊，就是跑好远去取的。纸张特别好，很重。超值的。"
				},{
					"user":"wwwww",
					"time":"2015-06-28 17:34:43",
					"content":"发货很快，晚上11点多下的单，第二天上午就到了，目测是正版的，从纸张、印刷质量来看都还行"
				},{
					"user":"xxxxx",
					"time":"2015-06-28 17:34:43",
					"content":"速度很快，昨天晚上订的今天中午就到了，只可惜书并不是塑胶封的，磨损比较严重"
				},{
					"user":"yyyyy",
					"time":"2015-06-28 17:34:43",
					"content":"是很好，就是被压了。书边有折痕，对于有强迫症的我来说心里不好受，"
				},{
					"user":"zzzzz",
					"time":"2015-06-28 17:34:43",
					"content":"正在看，书的质量还不错，就是太难了，慢慢学哈哈"
				}  
			]
}