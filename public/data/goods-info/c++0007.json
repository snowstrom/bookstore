{
	"id":"c++0007",
	"name":"C++ Primer Plus 第6版中文版第六版 自学c++程序设计入门到精通",
	"src":"assets/index/c++/c++0007.jpg",
	"price":59,
	"post":0.00,
	"sail":384,
	"comment":26,
	"stock":34,
	"relate":[
					{
						"src":"assets/index/c++/c++0001.jpg",
						"name":"C++ Primer(第五版)",
						"price":88,
						"id":"c++0001"
					},{
						"src":"assets/index/c++/c++0003.jpg",
						"name":"C++语言程序设计（特别版）",
						"price":88,
						"id":"c++0003"
					},{
						"src":"assets/index/c++/c++0004.jpg",
						"name":"21天学C++",
						"price":37,
						"id":"c++0004"
					},{
						"src":"assets/index/c++/c++0005.jpg",
						"name":"C++入门经典（第4版）",
						"price":55,
						"id":"c++0005"
					},{
						"src":"assets/index/c++/c++0006.jpg",
						"name":"C++ Primer(第五版)习题集",
						"price":23,
						"id":"c++0006"
					},{
						"src":"assets/index/c++/c++0002.jpg",
						"name":"Visual C++从入门到精通",
						"price":44,
						"id":"c++0002"
					},{
						"src":"assets/index/c++/c++0008.jpg",
						"name":"C++ 编程思想（两卷合订本）",
						"price":87,
						"id":"c++0008"
					}
			],
	"basic":{
				"title":"C++ Primer Plus 第6版中...",
				"packag":"否",
				"name":"C++ Primer Plus 第6版中文版",
				"price":"99.00元",
				"press":"人民邮电出版社",
				"press_time":"2012年7月",
				"author":"普拉达",
				"block":"美国",
				"format":"16开"
				},
	"book_info":"C++是在 C 语言基础上开发的一种集面向对象编程、泛型编程和过程化编程于一体的编程语言，是C语言的超集。《C++ Primer Plus(第6版)中文版》是根据2003年的ISO/ANSI C++标准编写的，通过大量短小精悍的程序详细而全面地阐述了 C++的基本概念和技术，并专辟一章介绍了C++11新增的功能。 全书分18章和10个附录。分别介绍了C++程序的运行方式、基本数据类型、复合数据类型、循环和关系表达式、分支语句和逻辑运算符、函数重载和函数模板、内存模型和名称空间、类的设计和使用、多态、虚函数、动态内存分配、继承、代码重用、友元、异常处理技术、string类和标准模板库、输入/输出、C++11新增功能等内容。 《C++ Primer Plus(第6版)中文版》针对C++初学者，书中从C语言基础知识开始介绍，然后在此基础上详细阐述C++新增的特性，因此不要求读者有C语言方面的背景知识。本书可作为高等院校教授C++课程的教材，也可供初学者自学C++时使用。<br/><br/>Stephen Prata在美国加州肯特菲尔得的马林学院教授天文、物理和计算机科学。他毕业于加州理工学院，在美国加州大学伯克利分校获得博士学位。他单独或与他人合 作编写的编程图书有十多本，其中《New C Primer Plus》获得了计算机出版联合会1990年度最佳“How-to”计算机图书奖，《C++ Primer Plus》获得了计算机出版联合会1991年度最佳“How-to”计算机图书奖提名。<br/>",
	"catalog":"第1章　预备知识　1<br/>1.1　C 简介　1<br/>1.2　C 简史　2<br/>1.2.1　C语言　2<br/>1.2.2　C语言编程原理　2<br/>1.2.3　面向对象编程　3<br/>1.2.4　C 和泛型编程　4<br/>1.2.5　C 的起源　4<br/>1.3　可移植性和标准　5<br/>1.3.1　C 的发展　6<br/>1.3.2　本书遵循的C 标准　6<br/>1.4　程序创建的技巧　6<br/>1.4.1　创建源代码文件　7<br/>1.4.2　编译和链接　8<br/>1.5　总结　10<br/><br/>第2章　开始学习C 　12<br/>2.1　进入C 　12<br/>2.1.1　main()函数　13<br/>2.1.2　C 注释　15<br/>2.1.3　C 预处理器和iostream文件　16<br/>2.1.4　头文件名　16<br/>2.1.5　名称空间　17<br/>2.1.6　使用cout进行C 输出　18<br/>2.1.7　C 源代码的格式化　19<br/>2.2　C 语句　21<br/>2.2.1　声明语句和变量　21<br/>2.2.2　赋值语句　22<br/>2.2.3　cout的新花样　23<br/>2.3　其他C 语句　23<br/>2.3.1　使用cin　24<br/>2.3.2　使用cout进行拼接　24<br/>2.3.3　类简介　25<br/>2.4　函数　26<br/>2.4.1　使用有返回值的函数　26<br/>2.4.2　函数变体　29<br/>2.4.3　用户定义的函数　29<br/>2.4.4　用户定义的有返回值的函数　32<br/>2.4.5　在多函数程序中使用using编译指令　33<br/>2.5　总结　34<br/>2.6　复习题　35<br/>2.7　编程练习　35<br/><br/>第3章　处理数据　37<br/>3.1　简单变量　37<br/>3.1.1　变量名　38<br/>3.1.2　整型　39<br/>3.1.3　整型short、int、long和long long　39<br/>3.1.4　无符号类型　43<br/>3.1.5　选择整型类型　45<br/>3.1.6　整型字面值　45<br/>3.1.7　C 如何确定常量的类型　47<br/>3.1.8　char类型：字符和小整数　47<br/>3.1.9　bool类型　53<br/>3.2　const限定符　54<br/>3.3　浮点数　55<br/>3.3.1　书写浮点数　55<br/>3.3.2　浮点类型　56<br/>3.3.3　浮点常量　58<br/>3.3.4　浮点数的优缺点　58<br/>3.4　C 算术运算符　59<br/>3.4.1　运算符优先级和结合性　60<br/>3.4.2　除法分支　60<br/>3.4.3　求模运算符　61<br/>3.4.4　类型转换　62<br/>3.4.5　C 11中的auto声明　66<br/>3.5　总结　67<br/>3.6　复习题　67<br/>3.7　编程练习　68<br/><br/>第4章　复合类型　70<br/>4.1　数组　70<br/>4.1.1　程序说明　72<br/>4.1.2　数组的初始化规则　73<br/>4.1.3　C 11数组初始化方法　73<br/>4.2　字符串　74<br/>4.2.1　拼接字符串常量　75<br/>4.2.2　在数组中使用字符串　76<br/>4.2.3　字符串输入　77<br/>4.2.4　每次读取一行字符串输入　78<br/>4.2.5　混合输入字符串和数字　81<br/>4.3　string类简介　82<br/>4.3.1　C 11字符串初始化　83<br/>4.3.2　赋值、拼接和附加　83<br/>4.3.3　string类的其他操作　84<br/>4.3.4　string类I/O　86<br/>4.3.5　其他形式的字符串字面值　87<br/>4.4　结构简介　88<br/>4.4.1　在程序中使用结构　89<br/>4.4.2　C 11结构初始化　91<br/>4.4.3　结构可以将string类作为成员吗　91<br/>4.4.4　其他结构属性　91<br/>4.4.5　结构数组　93<br/>4.4.6　结构中的位字段　94<br/>4.5　共用体　94<br/>4.6　枚举　95<br/>4.6.1　设置枚举量的值　97<br/>4.6.2　枚举的取值范围　97<br/>4.7　指针和自由存储空间　97<br/>4.7.1　声明和初始化指针　100<br/>4.7.2　指针的危险　101<br/>4.7.3　指针和数字　102<br/>4.7.4　使用new来分配内存　102<br/>4.7.5　使用delete释放内存　104<br/>4.7.6　使用new来创建动态数组　104<br/>4.8　指针、数组和指针算术　106<br/>4.8.1　程序说明　107<br/>4.8.2　指针小结　109<br/>4.8.3　指针和字符串　111<br/>4.8.4　使用new创建动态结构　114<br/>4.8.5　自动存储、静态存储和动态存储　117<br/>4.9　类型组合　118<br/>4.10　数组的替代品　120<br/>4.10.1　模板类vector　120<br/>4.10.2　模板类array(C 11)　120<br/>4.10.3　比较数组、vector对象和array对象　120<br/>4.11　总结　122<br/>4.12　复习题　123<br/>4.13　编程练习　123<br/><br/>第5章　循环和关系表达式　125<br/>5.1　for循环　125<br/>5.1.1　for循环的组成部分　126<br/>5.1.2　回到for循环　131<br/>5.1.3　修改步长　132<br/>5.1.4　使用for循环访问字符串　133<br/>5.1.5　递增运算符( )和递减运算符(--)　133<br/>5.1.6　副作用和顺序点　134<br/>5.1.7　前缀格式和后缀格式　135<br/>5.1.8　递增/递减运算符和指针　135<br/>5.1.9　组合赋值运算符　136<br/>5.1.10　复合语句(语句块)　136<br/>5.1.11　其他语法技巧——逗号运算符　138<br/>5.1.12　关系表达式　140<br/>5.1.13　赋值、比较和可能犯的错误　141<br/>5.1.14　C-风格字符串的比较　142<br/>5.1.15　比较string类字符串　144<br/>5.2　while循环　145<br/>5.2.1　for与while　147<br/>5.2.2　等待一段时间：编写延时循环　148<br/>5.3　do while循环　150<br/>5.4　基于范围的for循环(C 11)　152<br/>5.5　循环和文本输入　152<br/>5.5.1　使用原始的cin进行输入　152<br/>5.5.2　使用cin.get(char)进行补救　153<br/>5.5.3　使用哪一个cin.get()　154<br/>5.5.4　文件尾条件　155<br/>5.5.5　另一个cin.get()版本　157<br/>5.6　嵌套循环和二维数组　159<br/>5.6.1　初始化二维数组　160<br/>5.6.2　使用二维数组　160<br/>5.7　总结　162<br/>5.8　复习题　163<br/>5.9　编程练习　163<br/><br/>第6章　分支语句和逻辑运算符　165<br/>6.1　if语句　165<br/>6.1.1　if else语句　167<br/>6.1.2　格式化if else语句　168<br/>6.1.3　if else if else结构　169<br/>6.2　逻辑表达式　170<br/>6.2.1　逻辑OR运算符：||　171<br/>6.2.2　逻辑AND运算符：&&　172<br/>6.2.3　用&&来设置取值范围　174<br/>6.2.4　逻辑NOT运算符：!　175<br/>6.2.5　逻辑运算符细节　176<br/>6.2.6　其他表示方式　177<br/>6.3　字符函数库cctype　177<br/>6.4　?:运算符　179<br/>6.5　switch语句　180<br/>6.5.1　将枚举量用作标签　183<br/>6.5.2　switch和if else　184<br/>6.6　break和continue语句　185<br/>6.7　读取数字的循环　187<br/>6.8　简单文件输入/输出　190<br/>6.8.1　文本I/O和文本文件　190<br/>6.8.2　写入到文本文件中　191<br/>6.8.3　读取文本文件　194<br/>6.9　总结　197<br/>6.10　复习题　198<br/>6.11　编程练习　199<br/><br/>第7章　函数——C 的编程模块　202<br/>7.1　复习函数的基本知识　202<br/>7.1.1　定义函数　203<br/>7.1.2　函数原型和函数调用　205<br/>7.2　函数参数和按值传递　207<br/>7.2.1　多个参数　208<br/>7.2.2　另外一个接受两个参数的函数　210<br/>7.3　函数和数组　212<br/>7.3.1　函数如何使用指针来处理数组　213<br/>7.3.2　将数组作为参数意味着什么　213<br/>7.3.3　更多数组函数示例　215<br/>7.3.4　使用数组区间的函数　220<br/>7.3.5　指针和const　221<br/>7.4　函数和二维数组　224<br/>7.5　函数和C-风格字符串　225<br/>7.5.1　将C-风格字符串作为参数的函数　225<br/>7.5.2　返回C-风格字符串的函数　227<br/>7.6　函数和结构　228<br/>7.6.1　传递和返回结构　228<br/>7.6.2　另一个处理结构的函数示例　230<br/>7.6.3　传递结构的地址　234<br/>7.7　函数和string对象　235<br/>7.8　函数与array对象　236<br/>7.9　递归　238<br/>7.9.1　包含一个递归调用的递归　239<br/>7.9.2　包含多个递归调用的递归　240<br/>7.10　函数指针　241<br/>7.10.1　函数指针的基础知识　241<br/>7.10.2　函数指针示例　243<br/>7.10.3　深入探讨函数指针　244<br/>7.10.4　使用typedef进行简化　248<br/>7.11　总结　248<br/>7.12　复习题　249<br/>7.13　编程练习　250<br/>",
	"rate":"93%",
	"assess":[
				{
					"user":"aaaaa",
					"time":"2015-06-28 17:34:43",
					"content":"与我之前看到的评价不同，我收到的这书简直包装完美，印刷完美，纸质完美。而且内容丰富，讲的特别详细。绝对值这个价"
				},{
					"user":"bbbbb",
					"time":"2015-06-28 17:34:43",
					"content":"很棒的一本书！之前看了评论有点不敢买还特地去了新华书店，但是新华书店的也是没有塑封而且还破，关键还128。这本书的顺序和我现在用的两本教材都不一样，感觉这样的排版又新鲜又有乐趣，好评"
				},{
					"user":"ccccc",
					"time":"2015-06-28 17:34:43",
					"content":"很好，正版，很有分量，当然就像其他人说的，包装不会很仔细，不过书籍也没事，我买了三本就是放在一个纸箱里的，运来也还好，没有损坏 服务很好"
				},{
					"user":"ddddd",
					"time":"2015-06-28 17:34:43",
					"content":"书看起来像正版的，质量很好，包装也很好，物流给力，夜里拍的，夜里就发货了，第二天就到了，好评，下次买书就在这家买了"
				},{
					"user":"eeeee",
					"time":"2015-06-28 17:34:43",
					"content":"书很好，印刷很清晰，看着挺舒服的?好评"
				},{
					"user":"fffff",
					"time":"2015-06-28 17:34:43",
					"content":"书挺好的，包装就一层塑料纸，还好没破。物流很快，第二天就到了"
				},{
					"user":"ggggg",
					"time":"2015-06-28 17:34:43",
					"content":"好书，是正品，送货挺快的，不得不给一个五星好评。"
				},{
					"user":"hhhhh",
					"time":"2015-06-28 17:34:43",
					"content":"很好很好很好 很好很好很好 很好很好很好，是正品，就是书的外封皮有些破损，但完全不影响使用"
				},{
					"user":"iiiii",
					"time":"2015-06-28 17:34:43",
					"content":"物流很给力。转天就送到了。书没破损。内容我看不懂。但是我弟弟说挺好的。所以给的五星。"
				},{
					"user":"jjjjj",
					"time":"2015-06-28 17:34:43",
					"content":"字迹清晰，很好，纸张结实，讲的也是详细，例子还可以"
				},{
					"user":"kkkkk",
					"time":"2015-06-28 17:34:43",
					"content":"当当的物流一如既往的好！！赞！！！！！！！书也很不错，就是书的包装显得扣，不说了，学习去了！"
				},{
					"user":"lllll",
					"time":"2015-06-28 17:34:43",
					"content":"相当不错，绝对正版，很厚，肯定对学习特别有帮助，赞"
				},{
					"user":"mmmmm",
					"time":"2015-06-28 17:34:43",
					"content":"发票拖了半月才发，这效率还是别来坑人"
				},{
					"user":"nnnnn",
					"time":"2015-06-28 17:34:43",
					"content":"书没有损坏，其实也没有评论里说的那么严重，快递本来想给4星，但最后看快递员是个老大爷，心一酸，觉得谁都不容易啊，给5星"
				},{
					"user":"ooooo",
					"time":"2015-06-28 17:34:43",
					"content":"快递很快，隔天就到了，但是书右上角有折痕，而且不止一页。包装太简陋了，亲爱的店主你这是走贵书高冷风格吗，人靠衣装，书靠包装。虽说书的内容很精华，但是书这么厚不包装很容易折到。你让我这个强迫症情何以堪。"
				},{
					"user":"ppppp",
					"time":"2015-06-28 17:34:43",
					"content":"货收到了，快递很快，虽然包装不太好，书有划痕，但是里面是好的，没完美强迫症，可以看，是正版，纸张很好，想学知识的就别在意那么多不重要的细节了。好评。"
				},{
					"user":"qqqqq",
					"time":"2015-06-28 17:34:43",
					"content":"包装太寒酸了，不过还好书没有任何损伤，斥巨资买的书我要刷一波c"
				},{
					"user":"rrrrr",
					"time":"2015-06-28 17:34:43",
					"content":"为什么不用纸皮包一下，我拿到时你们的塑料袋包装都破了"
				},{
					"user":"sssss",
					"time":"2015-06-28 17:34:43",
					"content":"正版书，就是包装太一般了，封面上有印子"
				},{
					"user":"ttttt",
					"time":"2015-06-28 17:34:43",
					"content":"就包了一个袋………完全不知道爱护书籍，这个好评我是刷我的评价的"
				},{
					"user":"uuuuu",
					"time":"2015-06-28 17:34:43",
					"content":"包装真心破，像我这种经常在书上画娃娃的人都看不下去了，就一个快递袋，里面装了一本书，关键是快递袋还破了，其实你把包装搞好一点，加价5块钱我都可以接收。。。"
				},{
					"user":"vvvvv",
					"time":"2015-06-28 17:34:43",
					"content":"相当快啊，就是跑好远去取的。纸张特别好，很重。超值的。"
				},{
					"user":"wwwww",
					"time":"2015-06-28 17:34:43",
					"content":"发货很快，晚上11点多下的单，第二天上午就到了，目测是正版的，从纸张、印刷质量来看都还行"
				},{
					"user":"xxxxx",
					"time":"2015-06-28 17:34:43",
					"content":"速度很快，昨天晚上订的今天中午就到了，只可惜书并不是塑胶封的，磨损比较严重"
				},{
					"user":"yyyyy",
					"time":"2015-06-28 17:34:43",
					"content":"是很好，就是被压了。书边有折痕，对于有强迫症的我来说心里不好受，"
				},{
					"user":"zzzzz",
					"time":"2015-06-28 17:34:43",
					"content":"正在看，书的质量还不错，就是太难了，慢慢学哈哈"
				}
			]
}
