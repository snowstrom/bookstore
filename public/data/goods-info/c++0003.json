{
	"id":"c++0003",
	"name":"C++程序设计语言(特别版十周年中文纪念版)/计算机科学丛书",
	"src":"assets/index/c++/c++0003.jpg",
	"price":88,
	"post":0.00,
	"sail":234,
	"comment":34,
	"stock":28,
	"relate":[
					{
						"src":"assets/index/c++/c++0001.jpg",
						"name":"C++ Primer(第五版)",
						"price":88,
						"id":"c++0001"
					},{
						"src":"assets/index/c++/c++0002.jpg",
						"name":"Visual C++ 从入门到精通",
						"price":44,
						"id":"c++0002"
					},{
						"src":"assets/index/c++/c++0004.jpg",
						"name":"21天学C++",
						"price":37,
						"id":"c++0004"
					},{
						"src":"assets/index/c++/c++0005.jpg",
						"name":"C++入门经典（第4版）",
						"price":55,
						"id":"c++0005"
					},{
						"src":"assets/index/c++/c++0006.jpg",
						"name":"C++ Primer(第五版)习题集",
						"price":23,
						"id":"c++0006"
					},{
						"src":"assets/index/c++/c++0007.jpg",
						"name":"C++ Primer Plus(第六版)",
						"price":59,
						"id":"c++0007"
					},{
						"src":"assets/index/c++/c++0008.jpg",
						"name":"C++ 编程思想（两卷合订本）",
						"price":87,
						"id":"c++0008"
					}
			],
	"basic":{
				"title":"C++程序设计语言(特别版...",
				"packag":"否",
				"name":"C++程序设计语言(特别版)十周年中",
				"price":"99.00元",
				"press":"机械工业出版社",
				"press_time":"2010年03月",
				"author":"（美）斯特朗斯特鲁普 著",
				"block":"美国",
				"format":"16 开"
				},
	"book_info":"本书是在C++语言和程序设计领域具有深远影响、畅销不衰的著作，由C++语言的设计者编写，对C++语言进行了最全面、最权威的论述，覆盖标准C++以及由C++所支持的关键性编程技术和设计技术。本书英文原版一经面世，即引起业内人士的高度评价和热烈欢迎，先后被翻译成德、希、匈、西、荷、法、日、俄、中、韩等近20种语言，数以百万计的程序员从中获益，是无可取代的C++经典力作。<br/><br/>在本书英文原版面世10年后的今天，特别奉上十周年中文纪念版，希望众多具有丰富实战经验的C++开发人员能够温故而知新，印证学习心得，了解更加本质的C++知识，让获得的理论应用得更加灵活，也期望新的C++程序员从中认识到这本书的价值所在，从更高的起点出发，书写更加精彩的程序设计人生。<br/>",
	"catalog":"出版者的话<br/><br/>专家指导委员会<br/><br/>中文版序<br/><br/>译者序<br/><br/>序<br/><br/>第2版序<br/><br/>第1版序<br/><br/>导论<br/><br/>第1章 致读者<br/><br/>1.1 本书的结构<br/><br/>1.1.1 例子和参考<br/><br/>1.1.2 练习<br/><br/>1.1.3 有关实现的注记<br/><br/>1.2 学习C++<br/><br/>1.3 C++ 的设计<br/><br/>1.3.1 效率和结构<br/><br/>1.3.2 哲学注记<br/><br/>1.4 历史注记<br/><br/>1.5 C++ 的使用<br/><br/>1.6 C和C++<br/><br/>1.6.1 给C程序员的建议<br/><br/>1.6.2 给C++程序员的建议<br/><br/>1.7 有关在C++里编程的思考<br/><br/>1.8 忠告<br/><br/>1.9 参考文献<br/><br/>第2章 C++概览<br/><br/>2.1 为什么是C++<br/><br/>2.2 程序设计范型<br/><br/>2.3 过程式程序设计<br/><br/>2.3.1 变量和算术<br/><br/>2.3.2 检测和循环<br/><br/>2.3.3 指针和数组<br/><br/>2.4 模块程序设计<br/><br/>2.4.1 分别编译<br/><br/>2.4.2 异常处理<br/><br/>2.5 数据抽象<br/><br/>2.5.1 定义类型的模块<br/><br/>2.5.2 用户定义类型<br/><br/>2.5.3 具体类型<br/><br/>2.5.4 抽象类型<br/><br/>2.5.5 虚函数<br/><br/>2.6 面向对象的程序设计<br/><br/>2.6.1 具体类型的问题<br/><br/>2.6.2 类层次结构<br/><br/>2.7 通用型程序设计<br/><br/>2.7.1 容器<br/><br/>2.7.2 通用型算法<br/><br/>2.8 附言<br/><br/>2.9 忠告<br/><br/>第3章 标准库概览<br/><br/>3.1 引言<br/><br/>3.2 Hello, world！<br/><br/>3.3 标准库名字空间<br/><br/>3.4 输出<br/><br/>3.5 字符串<br/><br/>3.5.1 C风格的字符串<br/><br/>3.6 输入<br/><br/>3.7 容器<br/><br/>3.7.1 向量—vector<br/><br/>3.7.2 范围检查<br/><br/>3.7.3 表—list<br/><br/>3.7.4 映射—map<br/><br/>3.7.5 标准容器<br/><br/>3.8 算法<br/><br/>3.8.1 迭代器的使用<br/><br/>3.8.2 迭代器类型<br/><br/>3.8.3 迭代器和I/O<br/><br/>3.8.4 遍历和谓词<br/><br/>3.8.5 使用成员函数的算法<br/><br/>3.8.6 标准库算法<br/><br/>3.9 数学<br/><br/>3.9.1 复数<br/><br/>3.9.2 向量算术<br/><br/>3.9.3 基本数值支持<br/><br/>3.10 标准库功能<br/><br/>3.11 忠告<br/><br/>第一部分 基本功能<br/><br/>第4章 类型和声明<br/><br/>4.1 类型<br/><br/>4.1.1 基本类型<br/><br/>4.2 布尔量<br/><br/>4.3 字符类型<br/><br/>4.3.1 字符文字量<br/><br/>4.4 整数类型<br/><br/>4.4.1 整数文字量<br/><br/>4.5 浮点类型<br/><br/>4.5.1 浮点文字量<br/><br/>4.6 大小<br/><br/>4.7 void<br/><br/>4.8 枚举<br/><br/>4.9 声明<br/><br/>4.9.1 声明的结构<br/><br/>4.9.2 声明多个名字<br/><br/>4.9.3 名字<br/><br/>4.9.4 作用域<br/><br/>4.9.5 初始化<br/><br/>4.9.6 对象和左值<br/><br/>4.9.7 typedef<br/><br/>4.10 忠告<br/><br/>4.11 练习<br/><br/>第5章 指针、数组和结构<br/><br/>5.1 指针<br/><br/>5.1.1 零<br/><br/>5.2 数组<br/><br/>5.2.1 数组初始化<br/><br/>5.2.2 字符串文字量<br/><br/>5.3 到数组的指针<br/><br/>5.3.1 在数组里漫游<br/><br/>5.4 常量<br/><br/>5.4.1 指针和常量<br/><br/>5.5 引用<br/><br/>5.6 指向void的指针<br/><br/>5.7 结构<br/><br/>5.7.1 类型等价<br/><br/>5.8 忠告<br/><br/>5.9 练习<br/><br/>第6章 表达式和语句<br/><br/>6.1 一个桌面计算器<br/><br/>6.1.1 分析器<br/><br/>6.1.2 输入函数<br/><br/>6.1.3 低级输入<br/><br/>6.1.4 错误处理<br/><br/>6.1.5 驱动程序<br/><br/>6.1.6 头文件<br/><br/>6.1.7 命令行参数<br/><br/>6.1.8 有关风格的注记<br/><br/>6.2 运算符概览<br/><br/>6.2.1 结果<br/><br/>6.2.2 求值顺序<br/><br/>6.2.3 运算符优先级<br/><br/>6.2.4 按位逻辑运算符<br/><br/>6.2.5 增量和减量<br/><br/>6.2.6 自由存储<br/><br/>6.2.7 显式类型转换<br/><br/>6.2.8 构造函数<br/><br/>6.3 语句概览<br/><br/>6.3.1 声明作为语句<br/><br/>6.3.2 选择语句<br/><br/>6.3.3 迭代语句<br/><br/>6.3.4 goto<br/><br/>6.4 注释和缩进编排<br/><br/>6.5 忠告<br/><br/>6.6 练习<br/><br/>第7章 函数<br/><br/>7.1 函数声明<br/><br/>7.1.1 函数定义<br/><br/>7.1.2 静态变量<br/><br/>7.2 参数传递<br/><br/>7.2.1 数组参数<br/><br/>7.3 返回值<br/><br/>7.4 重载函数名<br/><br/>7.4.1 重载和返回类型<br/><br/>7.4.2 重载与作用域<br/><br/>7.4.3 手工的歧义性解析<br/><br/>7.4.4 多参数的解析<br/><br/>7.5 默认参数<br/><br/>7.6 未确定数目的参数<br/><br/>7.7 指向函数的指针<br/><br/>7.8 宏<br/><br/>7.8.1 条件编译<br/><br/>7.9 忠告<br/><br/>7.10 练习<br/><br/>第8章 名字空间和异常<br/><br/>8.1 模块化和界面<br/><br/>8.2 名字空间<br/><br/>8.2.1 带限定词的名字<br/><br/>8.2.2 使用声明<br/><br/>8.2.3 使用指令<br/><br/>8.2.4 多重界面<br/><br/>8.2.5 避免名字冲突<br/><br/>8.2.6 名字查找<br/><br/>8.2.7 名字空间别名<br/><br/>8.2.8 名字空间组合<br/><br/>8.2.9 名字空间和老代码<br/><br/>8.3 异常<br/><br/>8.3.1 抛出和捕捉<br/><br/>8.3.2 异常的辨识<br/><br/>8.3.3 在计算器中的异常<br/><br/>8.4 忠告<br/><br/>8.5 练习<br/><br/>第9章 源文件和程序<br/><br/>9.1 分别编译<br/><br/>9.2 连接<br/><br/>9.2.1 头文件<br/><br/>9.2.2 标准库头文件<br/><br/>9.2.3 单一定义规则<br/><br/>9.2.4 与非C++代码的连接<br/><br/>9.2.5 连接与指向函数的指针<br/><br/>9.3 使用头文件<br/><br/>9.3.1 单一头文件<br/><br/>9.3.2 多个头文件<br/><br/>9.3.3 包含保护符<br/><br/>9.4 程序<br/><br/>9.4.1 非局部变量的初始化<br/><br/>9.5 忠告<br/><br/>9.6 练习<br/><br/>第二部分 抽象机制<br/><br/>第10章 类<br/><br/>10.1 引言<br/><br/>10.2 类<br/><br/>10.2.1 成员函数<br/><br/>10.2.2 访问控制<br/><br/>10.2.3 构造函数<br/><br/>10.2.4 静态成员<br/><br/>10.2.5 类对象的复制<br/><br/>10.2.6 常量成员函数<br/><br/>10.2.7 自引用<br/><br/>10.2.8 结构和类<br/><br/>10.2.9 在类内部的函数定义<br/><br/>10.3 高效的用户定义类型<br/><br/>10.3.1 成员函数<br/><br/>10.3.2 协助函数<br/><br/>10.3.3 重载的运算符<br/><br/>10.3.4 具体类型的意义<br/><br/>10.4 对象<br/><br/>10.4.1 析构函数<br/><br/>10.4.2 默认构造函数<br/><br/>10.4.3 构造和析构<br/><br/>10.4.4 局部变量<br/><br/>10.4.5 自由存储<br/><br/>10.4.6 类对象作为成员<br/><br/>10.4.7 数组<br/><br/>10.4.8 局部静态存储<br/><br/>10.4.9 非局部存储<br/><br/>10.4.10 临时对象<br/><br/>10.4.11 对象的放置<br/><br/>10.4.12 联合<br/><br/>10.5 忠告<br/><br/>10.6 练习<br/><br/>第11章 运算符重载<br/><br/>11.1 引言<br/><br/>11.2 运算符函数<br/><br/>11.2.1 二元和一元运算符<br/><br/>11.2.2 运算符的预定义意义<br/><br/>11.2.3 运算符和用户定义类型<br/><br/>11.2.4 名字空间里的运算符<br/><br/>11.3 一个复数类型<br/><br/>11.3.1 成员运算符和非成员运算符<br/><br/>11.3.2 混合模式算术<br/><br/>11.3.3 初始化<br/><br/>11.3.4 复制<br/><br/>11.3.5 构造函数和转换<br/><br/>11.3.6 文字量<br/><br/>11.3.7 另一些成员函数<br/><br/>11.3.8 协助函数<br/><br/>11.4 转换运算符<br/><br/>11.4.1 歧义性<br/><br/>11.5 友元<br/><br/>11.5.1 友元的寻找<br/><br/>11.5.2 友元和成员<br/><br/>11.6 大型对象<br/><br/>11.7 基本运算符<br/><br/>11.7.1 显式构造函数<br/><br/>11.8 下标<br/><br/>11.9 函数调用<br/><br/>11.10 间接<br/><br/>11.11 增量和减量<br/><br/>11.12 一个字符串类<br/><br/>11.13 忠告<br/><br/>11.14 练习<br/><br/>第12章 派生类<br/><br/>12.1 引言<br/><br/>12.2 派生类<br/><br/>12.2.1 成员函数<br/><br/>12.2.2 构造函数和析构函数<br/><br/>12.2.3 复制<br/><br/>12.2.4 类层次结构<br/><br/>12.2.5 类型域<br/><br/>12.2.6 虚函数<br/><br/>12.3 抽象类<br/><br/>12.4 类层次结构的设计<br/><br/>12.4.1 一个传统的层次结构<br/><br/>12.4.2 抽象类<br/><br/>12.4.3 其他实现方式<br/><br/>12.4.4 对象创建的局部化<br/><br/>12.5 类层次结构和抽象类<br/><br/>12.6 忠告<br/><br/>12.7 练习<br/><br/>第13章 模板<br/><br/>13.1 引言<br/><br/>13.2 一个简单的String模板<br/><br/>13.2.1 定义一个模板<br/><br/>13.2.2 模板实例化<br/><br/>13.2.3 模板参数<br/><br/>13.2.4 类型等价<br/><br/>13.2.5 类型检查<br/><br/>13.3 函数模板<br/><br/>13.3.1 函数模板的参数<br/><br/>13.3.2 函数模板的重载<br/><br/>13.4 用模板参数描述策略<br/><br/>13.4.1 默认模板参数<br/><br/>13.5 专门化<br/><br/>13.5.1 专门化的顺序<br/><br/>13.5.2 模板函数的专门化<br/><br/>13.6 派生和模板<br/><br/>13.6.1 参数化和继承<br/><br/>13.6.2 成员模板<br/><br/>13.6.3 继承关系<br/><br/>13.7 源代码组织<br/><br/>13.8 忠告<br/><br/>13.9 练习<br/><br/>第14章 异常处理<br/><br/>14.1 错误处理<br/><br/>14.1.1 关于异常的其他观点<br/><br/>14.2 异常的结组<br/><br/>14.2.1 派生的异常<br/><br/>14.2.2 多个异常的组合<br/><br/>14.3 捕捉异常<br/><br/>14.3.1 重新抛出<br/><br/>14.3.2 捕捉所有异常<br/><br/>14.4 资源管理<br/><br/>14.4.1 构造函数和析构函数的使用<br/><br/>14.4.2 auto_ptr<br/><br/>14.4.3 告诫<br/><br/>14.4.4 异常和new<br/><br/>14.4.5 资源耗尽<br/><br/>14.4.6 构造函数里的异常<br/><br/>14.4.7 析构函数里的异常<br/><br/>14.5 不是错误的异常<br/><br/>14.6 异常的描述<br/><br/>14.6.1 对异常描述的检查<br/><br/>14.6.2 未预期的异常<br/><br/>14.6.3 异常的映射<br/><br/>14.7 未捕捉的异常<br/><br/>14.8 异常和效率<br/><br/>14.9 处理错误的其他方式<br/><br/>14.10 标准异常<br/><br/>14.11 忠告<br/><br/>14.12 练习<br/><br/>第15章 类层次结构<br/><br/>15.1 引言和概述<br/><br/>15.2 多重继承<br/><br/>15.2.1 歧义性解析<br/><br/>15.2.2 继承和使用声明<br/><br/>15.2.3 重复的基类<br/><br/>15.2.4 虚基类<br/><br/>15.2.5 使用多重继承<br/><br/>15.3 访问控制<br/><br/>15.3.1 保护成员<br/><br/>15.3.2 对基类的访问<br/><br/>15.4 运行时类型信息<br/><br/>15.4.1 dynamic_cast<br/><br/>15.4.2 在类层次结构中漫游<br/><br/>15.4.3 类对象的构造与析构<br/><br/>15.4.4 typeid和扩展的类型信息<br/><br/>15.4.5 RTTI的使用和误用<br/><br/>15.5 指向成员的指针<br/><br/>15.5.1 基类和派生类<br/><br/>15.6 自由存储<br/><br/>15.6.1 数组分配<br/><br/>15.6.2 虚构造函数<br/><br/>15.7 忠告<br/><br/>15.8 练习<br/><br/>第三部分 标 准 库<br/><br/>第16章 库组织和容器<br/><br/>16.1 标准库的设计<br/><br/>16.1.1 设计约束<br/><br/>16.1.2 标准库组织<br/><br/>16.1.3 语言支持<br/><br/>16.2 容器设计<br/><br/>16.2.1 专门化的容器和迭代器<br/><br/>16.2.2 有基类的容器<br/><br/>16.2.3 STL容器<br/><br/>16.3 向量<br/><br/>16.3.1 类型<br/><br/>16.3.2 迭代器<br/><br/>16.3.3 元素访问<br/><br/>16.3.4 构造函数<br/><br/>16.3.5 堆栈操作<br/><br/>16.3.6 表操作<br/><br/>16.3.7 元素定位<br/><br/>16.3.8 大小和容量<br/><br/>16.3.9 其他成员函数<br/><br/>16.3.10 协助函数<br/><br/>16.3.11 vector[bool]<br/><br/>16.4 忠告<br/><br/>16.5 练习<br/><br/>第17章 标准容器<br/><br/>17.1 标准容器<br/><br/>17.1.1 操作综述<br/><br/>17.1.2 容器综述<br/><br/>17.1.3 表示<br/><br/>17.1.4 对元素的要求<br/><br/>17.2 序列<br/><br/>17.2.1 向量—vector<br/><br/>17.2.2 表—list<br/><br/>17.2.3 双端队列—deque<br/><br/>17.3 序列适配器 1<br/><br/>17.3.1 堆栈—stack 1<br/><br/>17.3.2 队列—queue<br/><br/>17.3.3 优先队列—priority_queue<br/><br/>17.4 关联容器<br/><br/>17.4.1 映射—map<br/><br/>17.4.2 多重映射—multimap<br/><br/>17.4.3 集合—set<br/><br/>17.4.4 多重集合—multiset<br/><br/>17.5 拟容器<br/><br/>17.5.1 串—string<br/><br/>17.5.2 值向量—valarray<br/><br/>17.5.3 位集合—bitset<br/><br/>17.5.4 内部数组<br/><br/>17.6 定义新容器<br/><br/>17.6.1 散列映射—hash_map<br/><br/>17.6.2 表示和构造<br/><br/>17.6.3 其他散列关联容器<br/><br/>17.7 忠告<br/><br/>17.8 练习<br/><br/>第18章 算法和函数对象<br/><br/>18.1 引言<br/><br/>18.2 标准库算法综述<br/><br/>18.3 序列和容器<br/><br/>18.3.1 输入序列<br/><br/>18.4 函数对象<br/><br/>18.4.1 函数对象的基类<br/><br/>18.4.2 谓词<br/><br/>18.4.3 算术函数对象<br/><br/>18.4.4 约束器、适配器和否定器<br/><br/>18.5 非修改性序列算法<br/><br/>18.5.1 对每个做—for_each<br/><br/>18.5.2 查找族函数<br/><br/>18.5.3 计数<br/><br/>18.5.4 相等和不匹配<br/><br/>18.5.5 搜索<br/><br/>18.6 修改性序列算法<br/><br/>18.6.1 复制<br/><br/>18.6.2 变换<br/><br/>18.6.3 惟一化<br/><br/>18.6.4 取代<br/><br/>18.6.5 删除<br/><br/>18.6.6 填充和生成<br/><br/>18.6.7 反转和旋转<br/><br/>18.6.8 交换<br/><br/>18.7 排序的序列<br/><br/>18.7.1 排序<br/><br/>18.7.2 二分检索<br/><br/>18.7.3 归并<br/><br/>18.7.4 划分<br/><br/>18.7.5 序列上的集合运算<br/><br/>18.8 堆<br/><br/>18.9 最小和最大<br/><br/>18.10 排列<br/><br/>18.11 C风格算法<br/><br/>18.12 忠告<br/><br/>18.13 练习<br/><br/>第19章 迭代器和分配器<br/><br/>19.1 引言<br/><br/>19.2 迭代器和序列<br/><br/>19.2.1 迭代器的操作<br/><br/>19.2.2 迭代器特征类—iterator_traits<br/><br/>19.2.3 迭代器类别<br/><br/>19.2.4 插入器<br/><br/>19.2.5 反向迭代器<br/><br/>19.2.6 流迭代器<br/><br/>19.3 带检查迭代器<br/><br/>19.3.1 异常、容器和算法<br/><br/>19.4 分配器<br/><br/>19.4.1 标准分配器<br/><br/>19.4.2 一个用户定义分配器<br/><br/>19.4.3 广义的分配器<br/><br/>19.4.4 未初始化的存储<br/><br/>19.4.5 动态存储<br/><br/>19.4.6 C风格的分配<br/><br/>19.5 忠告<br/><br/>19.6 练习<br/><br/>第20章 串<br/><br/>20.1 引言<br/><br/>20.2 字符<br/><br/>20.2.1 字符特征类—char_traits<br/><br/>20.3 基础串类—basic_string<br/><br/>20.3.1 类型<br/><br/>20.3.2 迭代器<br/><br/>20.3.3 元素访问<br/><br/>20.3.4 构造函数<br/><br/>20.3.5 错误<br/><br/>20.3.6 赋值<br/><br/>20.3.7 到C风格字符串的转换<br/><br/>20.3.8 比较<br/><br/>20.3.9 插入<br/><br/>20.3.10 拼接<br/><br/>20.3.11 查找<br/><br/>20.3.12 替换<br/><br/>20.3.13 子串<br/><br/>20.3.14 大小和容量<br/><br/>20.3.15 I/O操作<br/><br/>20.3.16 交换<br/><br/>20.4 C标准库<br/><br/>20.4.1 C风格字符串<br/><br/>20.4.2 字符分类<br/><br/>20.5 忠告<br/><br/>20.6 练习<br/><br/>第21章 流<br/><br/>21.1 引言<br/><br/>21.2 输出<br/><br/>21.2.1 输出流<br/><br/>21.2.2 内部类型的输出<br/><br/>21.2.3 用户定义类型的输出<br/><br/>21.3 输入<br/><br/>21.3.1 输入流<br/><br/>21.3.2 内部类型的输入<br/><br/>21.3.3 流状态<br/><br/>21.3.4 字符的输入<br/><br/>21.3.5 用户定义类型的输入<br/><br/>21.3.6 异常<br/><br/>21.3.7 流的联结<br/><br/>21.3.8 哨位<br/><br/>21.4 格式化<br/><br/>21.4.1 格式状态<br/><br/>21.4.2 整数输出<br/><br/>21.4.3 浮点数输出<br/><br/>21.4.4 输出域<br/><br/>21.4.5 域的调整<br/><br/>21.4.6 操控符<br/><br/>21.5 文件流与字符串流<br/><br/>21.5.1 文件流<br/><br/>21.5.2 流的关闭<br/><br/>21.5.3 字符串流<br/><br/>21.6 缓冲<br/><br/>21.6.1 输出流和缓冲区<br/><br/>21.6.2 输入流和缓冲区<br/><br/>21.6.3 流和缓冲区<br/><br/>21.6.4 流缓冲区<br/><br/>21.7 现场<br/><br/>21.7.1 流回调<br/><br/>21.8 C输入/输出<br/><br/>21.9 忠告<br/><br/>21.10 练习<br/><br/>第22章 数值<br/><br/>22.1 引言<br/><br/>22.2 数值的限制<br/><br/>22.2.1 表示限制的宏<br/><br/>22.3 标准数学函数<br/><br/>22.4 向量算术<br/><br/>22.4.1 valarray的构造<br/><br/>22.4.2 valarray的下标和赋值<br/><br/>22.4.3 成员操作<br/><br/>22.4.4 非成员函数<br/><br/>22.4.5 切割<br/><br/>22.4.6 切割数组—slice_array<br/><br/>22.4.7 临时量、复制和循环<br/><br/>22.4.8 广义切割<br/><br/>22.4.9 屏蔽<br/><br/>22.4.10 间接数组—indirect_array<br/><br/>22.5 复数算术<br/><br/>22.6 通用数值算法<br/><br/>22.6.1 累积—accumulate<br/><br/>22.6.2 内积—inner_product<br/><br/>22.6.3 增量变化<br/><br/>22.7 随机数<br/><br/>22.8 忠告<br/><br/>22.9 练习<br/><br/>第四部分 用C++ 做设计<br/><br/>第23章 开发和设计<br/><br/>23.1 概述<br/><br/>23.2 引言<br/><br/>23.3 目的与手段<br/><br/>23.4 开发过程<br/><br/>23.4.1 开发循环<br/><br/>23.4.2 设计目标<br/><br/>23.4.3 设计步骤<br/><br/>23.4.4 试验和分析<br/><br/>23.4.5 测试<br/><br/>23.4.6 软件维护<br/><br/>23.4.7 效率<br/><br/>23.5 管理<br/><br/>23.5.1 重用<br/><br/>23.5.2 规模<br/><br/>23.5.3 个人<br/><br/>23.5.4 混成设计<br/><br/>23.6 带标注的参考文献<br/><br/>23.7 忠告<br/><br/>第24章 设计和编程<br/><br/>24.1 概述<br/><br/>24.2 设计和程序设计语言<br/><br/>24.2.1 忽视类<br/><br/>24.2.2 忽视继承<br/><br/>24.2.3 忽视静态类型检查<br/><br/>24.2.4 忽视程序设计<br/><br/>24.2.5 排他性地使用类层次结构<br/><br/>24.3 类<br/><br/>24.3.1 类表示什么<br/><br/>24.3.2 类层次结构<br/><br/>24.3.3 包容关系<br/><br/>24.3.4 包容和继承<br/><br/>24.3.5 使用关系<br/><br/>24.3.6 编入程序里的关系<br/><br/>24.3.7 类内的关系<br/><br/>24.4 组件<br/><br/>24.4.1 模板<br/><br/>24.4.2 界面和实现<br/><br/>24.4.3 肥大的界面<br/><br/>24.5 忠告<br/><br/>第25章 类的作用<br/><br/>25.1 类的种类<br/><br/>25.2 具体类型<br/><br/>25.2.1 具体类型的重用<br/><br/>25.3 抽象类型<br/><br/>25.4 结点<br/><br/>25.4.1 修改界面<br/><br/>25.5 动作<br/><br/>25.6 界面类<br/><br/>25.6.1 调整界面<br/><br/>25.7 句柄类<br/><br/>25.7.1 句柄上的操作<br/><br/>25.8 应用框架<br/><br/>25.9 忠告<br/><br/>25.10 练习<br/><br/>附录和索引<br/><br/>附录A 语法<br/><br/>附录B 兼容性<br/><br/>附录C 技术细节<br/><br/>附录D 现场<br/><br/>附录E 标准库的异常时安全性<br/><br/>索引",
	"rate":"98%",
	"assess":[
				{
					"user":"aaaaa",
					"time":"2015-06-28 17:34:43",
					"content":"与我之前看到的评价不同，我收到的这书简直包装完美，印刷完美，纸质完美。而且内容丰富，讲的特别详细。绝对值这个价"
				},{
					"user":"bbbbb",
					"time":"2015-06-28 17:34:43",
					"content":"很棒的一本书！之前看了评论有点不敢买还特地去了新华书店，但是新华书店的也是没有塑封而且还破，关键还128。这本书的顺序和我现在用的两本教材都不一样，感觉这样的排版又新鲜又有乐趣，好评"
				},{
					"user":"ccccc",
					"time":"2015-06-28 17:34:43",
					"content":"很好，正版，很有分量，当然就像其他人说的，包装不会很仔细，不过书籍也没事，我买了三本就是放在一个纸箱里的，运来也还好，没有损坏 服务很好"
				},{
					"user":"ddddd",
					"time":"2015-06-28 17:34:43",
					"content":"书看起来像正版的，质量很好，包装也很好，物流给力，夜里拍的，夜里就发货了，第二天就到了，好评，下次买书就在这家买了"
				},{
					"user":"eeeee",
					"time":"2015-06-28 17:34:43",
					"content":"书很好，印刷很清晰，看着挺舒服的?好评"
				},{
					"user":"fffff",
					"time":"2015-06-28 17:34:43",
					"content":"书挺好的，包装就一层塑料纸，还好没破。物流很快，第二天就到了"
				},{
					"user":"ggggg",
					"time":"2015-06-28 17:34:43",
					"content":"好书，是正品，送货挺快的，不得不给一个五星好评。"
				},{
					"user":"hhhhh",
					"time":"2015-06-28 17:34:43",
					"content":"很好很好很好 很好很好很好 很好很好很好，是正品，就是书的外封皮有些破损，但完全不影响使用"
				},{
					"user":"iiiii",
					"time":"2015-06-28 17:34:43",
					"content":"物流很给力。转天就送到了。书没破损。内容我看不懂。但是我弟弟说挺好的。所以给的五星。"
				},{
					"user":"jjjjj",
					"time":"2015-06-28 17:34:43",
					"content":"字迹清晰，很好，纸张结实，讲的也是详细，例子还可以"
				},{
					"user":"kkkkk",
					"time":"2015-06-28 17:34:43",
					"content":"当当的物流一如既往的好！！赞！！！！！！！书也很不错，就是书的包装显得扣，不说了，学习去了！"
				},{
					"user":"lllll",
					"time":"2015-06-28 17:34:43",
					"content":"相当不错，绝对正版，很厚，肯定对学习特别有帮助，赞"
				},{
					"user":"mmmmm",
					"time":"2015-06-28 17:34:43",
					"content":"发票拖了半月才发，这效率还是别来坑人"
				},{
					"user":"nnnnn",
					"time":"2015-06-28 17:34:43",
					"content":"书没有损坏，其实也没有评论里说的那么严重，快递本来想给4星，但最后看快递员是个老大爷，心一酸，觉得谁都不容易啊，给5星"
				},{
					"user":"ooooo",
					"time":"2015-06-28 17:34:43",
					"content":"快递很快，隔天就到了，但是书右上角有折痕，而且不止一页。包装太简陋了，亲爱的店主你这是走贵书高冷风格吗，人靠衣装，书靠包装。虽说书的内容很精华，但是书这么厚不包装很容易折到。你让我这个强迫症情何以堪。"
				},{
					"user":"ppppp",
					"time":"2015-06-28 17:34:43",
					"content":"货收到了，快递很快，虽然包装不太好，书有划痕，但是里面是好的，没完美强迫症，可以看，是正版，纸张很好，想学知识的就别在意那么多不重要的细节了。好评。"
				},{
					"user":"qqqqq",
					"time":"2015-06-28 17:34:43",
					"content":"包装太寒酸了，不过还好书没有任何损伤，斥巨资买的书我要刷一波c"
				},{
					"user":"rrrrr",
					"time":"2015-06-28 17:34:43",
					"content":"为什么不用纸皮包一下，我拿到时你们的塑料袋包装都破了"
				},{
					"user":"sssss",
					"time":"2015-06-28 17:34:43",
					"content":"正版书，就是包装太一般了，封面上有印子"
				},{
					"user":"ttttt",
					"time":"2015-06-28 17:34:43",
					"content":"就包了一个袋………完全不知道爱护书籍，这个好评我是刷我的评价的"
				},{
					"user":"uuuuu",
					"time":"2015-06-28 17:34:43",
					"content":"包装真心破，像我这种经常在书上画娃娃的人都看不下去了，就一个快递袋，里面装了一本书，关键是快递袋还破了，其实你把包装搞好一点，加价5块钱我都可以接收。。。"
				},{
					"user":"vvvvv",
					"time":"2015-06-28 17:34:43",
					"content":"相当快啊，就是跑好远去取的。纸张特别好，很重。超值的。"
				},{
					"user":"wwwww",
					"time":"2015-06-28 17:34:43",
					"content":"发货很快，晚上11点多下的单，第二天上午就到了，目测是正版的，从纸张、印刷质量来看都还行"
				},{
					"user":"xxxxx",
					"time":"2015-06-28 17:34:43",
					"content":"速度很快，昨天晚上订的今天中午就到了，只可惜书并不是塑胶封的，磨损比较严重"
				},{
					"user":"yyyyy",
					"time":"2015-06-28 17:34:43",
					"content":"是很好，就是被压了。书边有折痕，对于有强迫症的我来说心里不好受，"
				},{
					"user":"zzzzz",
					"time":"2015-06-28 17:34:43",
					"content":"正在看，书的质量还不错，就是太难了，慢慢学哈哈"
				}
			]
}
