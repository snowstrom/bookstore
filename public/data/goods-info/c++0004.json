{
	"id":"c++0004",
	"name":" 21天学通C++ 第7版 C++经典入门教程全新升级 涵盖C++11标准 c++语言程序设计宝典",
	"src":"assets/index/c++/c++0004.jpg",
	"price":37,
	"post":0.00,
	"sail":384,
	"comment":26,
	"stock":42,
	"relate":[
					{
						"src":"assets/index/c++/c++0001.jpg",
						"name":"C++ Primer(第五版)",
						"price":88,
						"id":"c++0001"
					},{
						"src":"assets/index/c++/c++0003.jpg",
						"name":"C++语言程序设计（特别版）",
						"price":88,
						"id":"c++0003"
					},{
						"src":"assets/index/c++/c++0002.jpg",
						"name":"Visual C++ 从入门到精通",
						"price":44,
						"id":"c++0002"
					},{
						"src":"assets/index/c++/c++0005.jpg",
						"name":"C++入门经典（第4版）",
						"price":55,
						"id":"c++0005"
					},{
						"src":"assets/index/c++/c++0006.jpg",
						"name":"C++ Primer(第五版)习题集",
						"price":23,
						"id":"c++0006"
					},{
						"src":"assets/index/c++/c++0007.jpg",
						"name":"C++ Primer Plus(第六版)",
						"price":59,
						"id":"c++0007"
					},{
						"src":"assets/index/c++/c++0008.jpg",
						"name":"C++ 编程思想（两卷合订本）",
						"price":87,
						"id":"c++0008"
					}
			],
	"basic":{
				"title":"21天学通C++(第7版)",
				"packag":"否",
				"name":"21天学通C++(第7版)",
				"price":"59.00元",
				"press":"人民邮电出版社",
				"press_time":"2012年12月",
				"author":"Siddhartha Rao著、袁国忠译",
				"block":"美国/中国大陆",
				"format":"16开"
				},
	"book_info":"《21天学通C++(第7版)》通过大量短小精悍的程序，详细而全面地阐述了C++基本概念和技术以及C++11新增的功能，包括管理输入/输出、循环和数组、面向对象编程、模板、使用标准模板库以及lambda表达式等。这些内容被组织成结构合理、联系紧密的章节，每章都可在1小时内阅读完毕；每章都提供了示例程序清单，并辅以示例输出和代码分析，以阐述该章介绍的主题。为加深读者对所学内容的理解，每章末尾都提供了常见问题及其答案以及练习和测验。读者可对照附录D提供的测验和练习答案，了解自己对所学内容的掌握程度。 《21天学通C++(第7版)》是针对C++初学者编写的，不要求读者有C语言方面的背景知识，可作为高等院校教授C++课程的教材，也可供初学者自学C++时使用。<br/><br/>Siddhartha Rao是一位Microsoft Visual C++MVP，拥有在各种平台上编写驱动程序和应用程序的丰富经验。他受聘于SAP AG，当前为SAP Product SecurityIndia的负责人，主要职责包括制定软件开发最佳实践，以确保SAP软件的安全和全球竞争力。<br/>",
	"catalog":"第1章 绪论<br/>1.1 C++简史<br/>1.1.1 与C语言的关系<br/>1.1.2 C++的优点<br/>1.1.3 C++标准的发展历程<br/>1.1.4 哪些人使用C++程序<br/>1.2 编写C++应用程序<br/>1.2.1 生成可执行文件的步骤<br/>1.2.2 分析并修复错误<br/>1.2.3 集成开发环境<br/>1.2.4 编写第一个C++应用程序<br/>1.2.5 生成并执行第一个C++应用程序<br/>1.2.6 理解编译错误<br/>1.3 C++11新增的功能<br/>1.4 总结<br/>1.5 问与答<br/>1.6 作业<br/>1.6.1 测验<br/>1.6.2 练习<br/><br/>第2章 C++程序的组成部分<br/>2.1 Hello World程序的组成部分<br/>2.1.1 预处理器编译指令#include<br/>2.1.2 程序的主体-main()<br/>2.1.3 返回值<br/>2.2 名称空间的概念<br/>2.3 C++代码中的注释<br/>2.4 C++函数<br/>2.5 使用std::cin和std::cout执行基本输入输出操作<br/>2.6 总结<br/>2.7 问与答<br/>2.8 作业<br/>2.8.1 测验<br/>2.8.2 练习<br/><br/>第3章 使用变量和常量<br/>3.1 什么是变量<br/>3.1.1 内存和寻址概述<br/>3.1.2 声明变量以访问和使用内存<br/>3.1.3 声明并初始化多个类型相同的变量<br/>3.1.4 理解变量的作用域<br/>3.1.5 全局变量<br/>3.2 编译器支持的常见C++变量类型<br/>3.2.1 使用bool变量存储布尔值<br/>3.2.2 使用char变量存储字符<br/>3.2.3 有符号整数和无符号整数的概念<br/>3.2.4 有符号整型short、int、long和long long<br/>3.2.5 无符号整型unsigned short、unsigned int、unsigned long和unsigned longlong<br/>3.2.6 浮点类型float和double<br/>3.3 使用sizeof确定变量的长度<br/>3.4 使用typedef替换变量类型<br/>3.5 什么是常量<br/>3.5.1 字面常量<br/>3.5.2 使用const将变量声明为常量<br/>3.5.3 使用constexpr声明常量<br/>3.5.4 枚举常量<br/>3.5.5 使用#define定义常量<br/>3.6 给变量和常量命名<br/>3.7 不能用作常量或变量名的关键字<br/>3.8 总结<br/>3.9 问与答<br/>3.10 作业<br/>3.10.1 测验<br/>3.10.2 练习<br/><br/>第4章 管理数组和字符串<br/>4.1 什么是数组<br/>4.1.1 为何需要数组<br/>4.1.2 声明和初始化静态数组<br/>4.1.3 数组中的数据是如何存储的<br/>4.1.4 访问存储在数组中的数据<br/>4.1.5 修改存储在数组中的数据<br/>4.2 多维数组<br/>4.2.1 声明和初始化多维数组<br/>4.2.2 访问多维数组中的元素<br/>4.3 动态数组<br/>4.4 C风格字符串<br/>4.5 C++字符串：使用std::string<br/>4.6 总结<br/>4.7 问与答<br/>4.8 作业<br/>4.8.1 测验<br/>4.8.2 练习<br/><br/>第5章 使用表达式、语句和运算符<br/>5.1 语句<br/>5.2 复合语句(语句块)<br/>5.3 使用运算符<br/>5.3.1 赋值运算符(＝)<br/>5.3.2 理解左值和右值<br/>5.3.3 加法运算符(+)、减法运算符、乘法运算符(*)、除法运算符(/)和求模运算符(%)<br/>5.3.4 递增运算符(++)和递减运算符(——)<br/>5.3.5 前缀还是后缀<br/>5.3.6 相等运算符(==)和不等运算符(!=)<br/>5.3.7 关系运算符<br/>5.3.8 逻辑运算NOT、AND、OR和XOR<br/>5.3.9 使用C++逻辑运算NOT(！)、AND(&&)和OR(||)<br/>5.3.10 按位运算符NOT(～)、AND(&)、OR(|)和XOR(^)<br/>5.3.11 按位右移运算符(>>)和左移运算符()访问成员<br/>9.2 关键字public和private<br/>9.2.1 使用关键字private实现数据抽象<br/>9.3 构造函数<br/>9.3.1 声明和实现构造函数<br/>9.3.2 何时及如何使用构造函数<br/>9.3.3 重载构造函数<br/>9.3.4 没有默认构造函数的类<br/>9.3.5 带默认值的构造函数参数<br/>9.3.6 包含初始化列表的构造函数<br/>9.4 析构函数<br/>9.4.1 声明和实现析构函数<br/>9.4.2 何时及如何使用析构函数<br/>9.5 复制构造函数<br/>9.5.1 浅复制及其存在的问题<br/>9.5.2 使用复制构造函数确保深复制<br/>9.5.3 有助于改善性能的移动构造函数<br/>9.6 构造函数和析构函数的其他用途<br/>9.6.1 不允许复制的类<br/>9.6.2 只能有一个实例的单例类<br/>9.6.3 禁止在栈中实例化的类<br/>9.7 this指针<br/>9.8 将sizeof()用于类<br/>9.9 结构不同于类的地方<br/>9.10 声明友元<br/>9.11 总结<br/>9.12 问与答<br/>9.13 作业<br/>9.13.1 测验<br/>9.13.2 练习<br/><br/>第10章 实现继承<br/>10.1 继承基础<br/>10.1.1 继承和派生<br/>10.1.2 C++派生语法<br/>10.1.3 访问限定符protected<br/>10.1.4 基类初始化-向基类传递参数<br/>10.1.5 在派生类中覆盖基类的方法<br/>10.1.6 调用基类中被覆盖的方法<br/>10.1.7 在派生类中调用基类的方法<br/>10.1.8 在派生类中隐藏基类的方法<br/>10.1.9 构造顺序<br/>10.1.10 析构顺序<br/>10.2 私有继承<br/>10.3 保护继承<br/>10.4 切除问题<br/>10.5 多继承<br/>10.6 总结<br/>10.7 问与答<br/>10.8 作业<br/>10.8.1 测验<br/>10.8.2 练习<br/><br/>第11章 多态<br/>11.1 多态基础<br/>11.1.1 为何需要多态行为<br/>11.1.2 使用虚函数实现多态行为<br/>11.1.3 为何需要虚构造函数<br/>11.1.4 虚函数的工作原理——理解虚函数表<br/>11.1.5 抽象基类和纯虚函数<br/>11.2 使用虚继承解决菱形问题<br/>11.3 可将复制构造函数声明为虚函数吗<br/>11.4 总结<br/>11.5 问与答<br/>11.6 作业<br/>11.6.1 测验<br/>11.6.2 练习<br/>......",
	"rate":"88%",
	"assess":[
				{
					"user":"aaaaa",
					"time":"2015-06-28 17:34:43",
					"content":"与我之前看到的评价不同，我收到的这书简直包装完美，印刷完美，纸质完美。而且内容丰富，讲的特别详细。绝对值这个价"
				},{
					"user":"bbbbb",
					"time":"2015-06-28 17:34:43",
					"content":"很棒的一本书！之前看了评论有点不敢买还特地去了新华书店，但是新华书店的也是没有塑封而且还破，关键还128。这本书的顺序和我现在用的两本教材都不一样，感觉这样的排版又新鲜又有乐趣，好评"
				},{
					"user":"ccccc",
					"time":"2015-06-28 17:34:43",
					"content":"很好，正版，很有分量，当然就像其他人说的，包装不会很仔细，不过书籍也没事，我买了三本就是放在一个纸箱里的，运来也还好，没有损坏 服务很好"
				},{
					"user":"ddddd",
					"time":"2015-06-28 17:34:43",
					"content":"书看起来像正版的，质量很好，包装也很好，物流给力，夜里拍的，夜里就发货了，第二天就到了，好评，下次买书就在这家买了"
				},{
					"user":"eeeee",
					"time":"2015-06-28 17:34:43",
					"content":"书很好，印刷很清晰，看着挺舒服的?好评"
				},{
					"user":"fffff",
					"time":"2015-06-28 17:34:43",
					"content":"书挺好的，包装就一层塑料纸，还好没破。物流很快，第二天就到了"
				},{
					"user":"ggggg",
					"time":"2015-06-28 17:34:43",
					"content":"好书，是正品，送货挺快的，不得不给一个五星好评。"
				},{
					"user":"hhhhh",
					"time":"2015-06-28 17:34:43",
					"content":"很好很好很好 很好很好很好 很好很好很好，是正品，就是书的外封皮有些破损，但完全不影响使用"
				},{
					"user":"iiiii",
					"time":"2015-06-28 17:34:43",
					"content":"物流很给力。转天就送到了。书没破损。内容我看不懂。但是我弟弟说挺好的。所以给的五星。"
				},{
					"user":"jjjjj",
					"time":"2015-06-28 17:34:43",
					"content":"字迹清晰，很好，纸张结实，讲的也是详细，例子还可以"
				},{
					"user":"kkkkk",
					"time":"2015-06-28 17:34:43",
					"content":"当当的物流一如既往的好！！赞！！！！！！！书也很不错，就是书的包装显得扣，不说了，学习去了！"
				},{
					"user":"lllll",
					"time":"2015-06-28 17:34:43",
					"content":"相当不错，绝对正版，很厚，肯定对学习特别有帮助，赞"
				},{
					"user":"mmmmm",
					"time":"2015-06-28 17:34:43",
					"content":"发票拖了半月才发，这效率还是别来坑人"
				},{
					"user":"nnnnn",
					"time":"2015-06-28 17:34:43",
					"content":"书没有损坏，其实也没有评论里说的那么严重，快递本来想给4星，但最后看快递员是个老大爷，心一酸，觉得谁都不容易啊，给5星"
				},{
					"user":"ooooo",
					"time":"2015-06-28 17:34:43",
					"content":"快递很快，隔天就到了，但是书右上角有折痕，而且不止一页。包装太简陋了，亲爱的店主你这是走贵书高冷风格吗，人靠衣装，书靠包装。虽说书的内容很精华，但是书这么厚不包装很容易折到。你让我这个强迫症情何以堪。"
				},{
					"user":"ppppp",
					"time":"2015-06-28 17:34:43",
					"content":"货收到了，快递很快，虽然包装不太好，书有划痕，但是里面是好的，没完美强迫症，可以看，是正版，纸张很好，想学知识的就别在意那么多不重要的细节了。好评。"
				},{
					"user":"qqqqq",
					"time":"2015-06-28 17:34:43",
					"content":"包装太寒酸了，不过还好书没有任何损伤，斥巨资买的书我要刷一波c"
				},{
					"user":"rrrrr",
					"time":"2015-06-28 17:34:43",
					"content":"为什么不用纸皮包一下，我拿到时你们的塑料袋包装都破了"
				},{
					"user":"sssss",
					"time":"2015-06-28 17:34:43",
					"content":"正版书，就是包装太一般了，封面上有印子"
				},{
					"user":"ttttt",
					"time":"2015-06-28 17:34:43",
					"content":"就包了一个袋………完全不知道爱护书籍，这个好评我是刷我的评价的"
				},{
					"user":"uuuuu",
					"time":"2015-06-28 17:34:43",
					"content":"包装真心破，像我这种经常在书上画娃娃的人都看不下去了，就一个快递袋，里面装了一本书，关键是快递袋还破了，其实你把包装搞好一点，加价5块钱我都可以接收。。。"
				},{
					"user":"vvvvv",
					"time":"2015-06-28 17:34:43",
					"content":"相当快啊，就是跑好远去取的。纸张特别好，很重。超值的。"
				},{
					"user":"wwwww",
					"time":"2015-06-28 17:34:43",
					"content":"发货很快，晚上11点多下的单，第二天上午就到了，目测是正版的，从纸张、印刷质量来看都还行"
				},{
					"user":"xxxxx",
					"time":"2015-06-28 17:34:43",
					"content":"速度很快，昨天晚上订的今天中午就到了，只可惜书并不是塑胶封的，磨损比较严重"
				},{
					"user":"yyyyy",
					"time":"2015-06-28 17:34:43",
					"content":"是很好，就是被压了。书边有折痕，对于有强迫症的我来说心里不好受，"
				},{
					"user":"zzzzz",
					"time":"2015-06-28 17:34:43",
					"content":"正在看，书的质量还不错，就是太难了，慢慢学哈哈"
				}
			]
}
